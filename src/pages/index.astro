---
import '@fontsource/roboto-mono';
import '../styles/normalize.scss';
import Layout from '../layouts/Layout.astro';
---
<Layout title='Neil French'>
  <div id="container">
    <div id="content">
      <div id="intro">
        <h1 id="title"><span class="wave">👋</span> Hi, I'm Neil!</h1>
        <nav>
          <div id="nav-container">
            <div>
              <a target="_blank" href="https://resume.neilfren.ch/neil/currentresume">Resume</a> | 
              <a target="_blank" href="https://github.com/neilmfrench">Github</a> | 
              <a target="_blank" href="https://www.linkedin.com/in/neil-french-623bb0188/">Linkedin</a> | 
              <a target="_blank" href="mailto:hello@neilfren.ch">Email</a> | 
              <a target="_blank" href="https://blog.neilfren.ch">Blog</a>
            </div>
            <div>
              <button class="theme-toggle" id="sun">☀️&nbsp;</button>
              <button class="theme-toggle" id="moon">🌙&nbsp;</button>
              <button class="theme-toggle" id="rainbow">🌈</button>
            </div>
          </div>
        </nav>
      </div>
      <section>
        <h3>Currently, I'm:</h3>
        <ul>
          <li id="cloud">a DevOps/Cloud engineer based in Huntington Beach, California,</li>
          <li id="airplane">bringing the cloud to the skies as an engineer at <a target="_blank" href="https://boeing.com">Boeing</a>,</li>
          <li id="coder">and embracing the self-hosted lifestyle with my <a target="_blank" href="https://github.com/neilmfrench/homelab-prod">homelab</a>.</li>
        </ul>
        <h3>Previously, I:</h3>
        <ul>
          <li id="rocket">helped rocket scientists as a Software Engineer at <a target="_blank" href="https://aerospace.org/">The Aerospace Corporation</a>,</li>
          <li id="nerd">graduated Magna Cum Laude from <a target="_blank" href="https://www.calpoly.edu/">Cal Poly San Luis Obispo</a>,</li>
          <li id="book">and brought my friend's <a target="_blank" href="https://jakethemag.com/">literary magazine</a> to the world.</li>
        </ul>
        <h3>In my free time, I enjoy:</h3>
        <ul>
          <li id="music">listening to all types of music,</li>
          <li id="tasty">trying new restaurants and coffeeshops,</li>
          <li id="soccer">and playing as much soccer as I possibly can.</li>
        </ul>
      </section>
      <footer>
        <p>Made with ❤️, ☕️, 🎧, and 😴 in Huntington Beach.</p>
        <p>
          Page generated by pod {import.meta.env.POD_NAME} on my 
          <a target="_blank" href="https://github.com/neilmfrench/homelab-prod/blob/main/kubernetes/apps/production/default/homepage/app/homepage-values.yaml">Talos Kubernetes cluster</a>
          {import.meta.env.CLUSTER_NAME ? ` (${import.meta.env.CLUSTER_NAME})` : ''}
        </p>
      </footer>
    </div>
  </div>
</Layout>
---
<style lang="scss">
  @mixin list-emoji($id, $emoji) {
    &##{$id} {
      &::before {
        content: $emoji;
        margin-right: 0.5rem;
      }
    }
  }

  html {
    font-size: 16px;
    line-height: 1.5;
  }

  body {
    font-family: "Roboto Mono", courier new;
  }

  h1 {
    font-size: 2rem;
    margin: 2rem 0;

    &#title {
      margin-top: 0;
    }
  }

  h3 {
    font-size: 1.25rem;
    margin: 1rem 0;
  }

  p {
    font-size: 1rem;
    margin: 0.75rem 0;
  }

  ul {
    padding-left: 0;

    li {
      list-style: none;
      list-style-position: outside;
      margin-bottom: 0.5rem;

      @include list-emoji('nerd', '🤓');
      @include list-emoji('book', '📖');
      @include list-emoji('music', '🎧');
      @include list-emoji('tasty', '😋');
      @include list-emoji('soccer', '⚽');
      @include list-emoji('coder', '👨‍💻');
      @include list-emoji('rocket', '🚀');
      @include list-emoji('cloud', '☁️');
      @include list-emoji('airplane', '✈️');
    }
  }

  footer {
    margin-top: 2rem;
    opacity: 0.5;
  }

  .theme-toggle {
    cursor: pointer;
    &:active {
      -webkit-transform: scale(0.9);
    }
  }

  #container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
  }

  #nav-container {
    display: flex;
    justify-content: space-between;
  }

  #content {
    max-width: 52rem;
    margin: 2rem;
  }

  .wave {
    animation-name: wave-animation;  
    animation-duration: 2.5s;        
    animation-iteration-count: infinite;  
    transform-origin: 70% 70%;       
    display: inline-block;
  }

  @keyframes wave-animation {
    0% { transform: rotate( 0.0deg) }
    10% { transform: rotate(14.0deg) }  
    20% { transform: rotate(-8.0deg) }
    30% { transform: rotate(14.0deg) }
    40% { transform: rotate(-4.0deg) }
    50% { transform: rotate(10.0deg) }
    60% { transform: rotate( 0.0deg) }  
    100% { transform: rotate( 0.0deg) }
  }
</style>

<script is:inline>
  // get previous theme or default to light/dark

  const randomGradient = () => {
    var hexValues = ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e"];
    
    function populate(a) {
      for ( var i = 0; i < 6; i++ ) {
        var x = Math.round( Math.random() * 14 );
        var y = hexValues[x];
        a += y;
      }
      return a;
    }
    
    var newColor1 = populate('#');
    var newColor2 = populate('#');
    var angle = Math.round( Math.random() * 360 );
    
    return "linear-gradient(" + angle + "deg, " + newColor1 + ", " + newColor2 + ")";
  }

  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
      return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else if(theme === 'dark') {
    document.documentElement.classList.add('dark');
  } else if(theme === 'gradient') {
    document.documentElement.style.setProperty('background', randomGradient());
  }
  document.body.style.visibility = 'visible';
  window.localStorage.setItem('theme', theme);

  const handleToggleLight = () => {
    const element = document.documentElement;
    if(!element.classList.contains("light")) {
      element.classList.remove("dark");
      element.classList.remove("gradient");
      element.classList.add("light");
      document.documentElement.style.setProperty('background', 'white');
      localStorage.setItem("theme", "light");
    }
  } 

  const handleToggleDark = () => {
    const element = document.documentElement;
    if(!element.classList.contains("dark")) {
      element.classList.remove("light");
      element.classList.remove("gradient");
      element.classList.add("dark");
      document.documentElement.style.setProperty('background', '#0A0A0A');
      localStorage.setItem("theme", "dark");
    }
  }

  const handleToggleGradient = () => {
    const element = document.documentElement;
    if(!element.classList.contains("gradient")) {
      element.classList.remove("dark");
      element.classList.remove("light");
      element.classList.add("gradient");
      localStorage.setItem("theme", "gradient");
    }
    document.documentElement.style.setProperty('background', randomGradient());
  }
  document.getElementById("sun").addEventListener("click", handleToggleLight);
  document.getElementById("moon").addEventListener("click", handleToggleDark);
  document.getElementById("rainbow").addEventListener("click", handleToggleGradient);
</script>
